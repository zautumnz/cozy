let util.colorize = (fn () {
    let color_codes = {
        "reset": 0,
        "bold": 1,
        "dim": 2,
        "italic": 3,
        "underline": 4,
        "blink": 5,
        "inverse": 7,
        "hidden": 8,
        "strikethrough": 9,
        "doubleunderline": 21,
        "black": 30,
        "red": 31,
        "green": 32,
        "yellow": 33,
        "blue": 34,
        "magenta": 35,
        "cyan": 36,
        "white": 37,
        "bg_black": 40,
        "bg_red": 41,
        "bg_green": 42,
        "bg_yellow": 43,
        "bg_blue": 44,
        "bg_magenta": 45,
        "bg_cyan": 46,
        "bg_white": 47,
        "framed": 51,
        "overlined": 53,
        "gray": 90,
        "red_bright": 91,
        "green_bright": 92,
        "yellow_bright": 93,
        "blue_bright": 94,
        "magenta_bright": 95,
        "cyan_bright": 96,
        "white_bright": 97,
        "bg_gray": 100,
        "bg_red_bright": 101,
        "bg_green_bright": 102,
        "bg_yellow_bright": 103,
        "bg_blue_bright": 104,
        "bg_magenta_bright": 105,
        "bg_cyan_bright": 106,
        "bg_white_bright": 107
    }

    let apply_col = fn (col) {
        return fn (content) {
            let code = color_codes[col]
            let s = "\\033[1;"
            let col_s = s + util.string(code) + "m"
            let reset_s = s + util.string(color_codes["reset"]) + "m"
            return col_s + content + reset_s
        }
    }

    let k = color_codes.keys()
    let ret = k.reduce(fn (x, acc) {
        acc = acc.set(x, apply_col(x))
        return acc
    }, {})

    return ret
})()
